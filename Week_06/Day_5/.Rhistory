library(tidyverse)
data(msleep)
library(gtools)
library(tidyverse)
library(janitor)
library(skimr)
library(infer)
library(boot)
force(msleep)
View(msleep)
genus_count <- msleep %>%
group_by(genus) %>%
summarise(n())
genus_count
vore_count <- msleep %>%
group_by(vore) %>%
summarise(n())
vore_count
order_count <- msleep %>%
group_by(order) %>%
summarise(n())
order_count
# Clean the data
clean_msleep <- msleep
View(clean_msleep)
# Let's have a look at the data
msleep %>%
ggplot(aes(x = sleep_total)) +
geom_histogram(col = "white", fill = "seagreen")
# Data has a left skew
msleep %>%
ggplot(aes(x = sleep_total)) +
geom_boxplot()
observed_stat <- msleep %>%
summarise (mean_rating = mean(sleep_total))
observed_stat
# Calculate the null sampling distribution
# point - we are testing one value
# mu is the mean
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesise(null = "point", mu = 7.00) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
View(null_distribution)
null_distribution %>%
visualise(bins = 30)
View(observed_stat)
# Visualise the results
# shade_pvalue gives different ways of shading in the distribution graph
# using both shades in significantly greater and lower than the test statistic
# the graph shows the p-value
# the shading shows us the corresponding extremes
# are we in the extreme 5%?
null_distribution %>%
visualise(bins = 30) +
shade_pvalue(obs_stat = observed_stat$mean_rating,
direction = "both")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat$mean_rating,
direction = "both")
p_value
# Create omnivore table
omnivores <- msleep %>%
filter(vore == "omni")
# Create omnivore table
omnivores <- msleep %>%
filter(vore == "omni")
# Create herbivore table
herbivores <- msleep %>%
filter(vore == "herbi")
# Combine the two datasets
omni_herbi <- bind_rows(omnivores, herbivores, .id = "vore") %>%
mutate(vore = ifelse(vore == "1", "omni", "herbi"))
head(omni_herbi)
View(omni_herbi)
omni_herbi %>%
ggplot(aes(y = sleep_total, x = vore)) +
geom_boxplot()
View(omni_herbi)
null_distribution <- omni_herbi %>%
specify(sleep_total ~ vore) %>%
#it is the relationship between the total sleep and the type of animal we are testing.
hypothesise(null = "independence") %>%
#the null hypothesis is there is no relationship i.e. they are independent
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
#our sample stat is mean of algarve minus mean of nice, so this is the order we specify in the calculate step
head(null_distribution)
observed_stat <- omni_herbi %>%
specify(sleep_total ~ vore) %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
observed_stat
null_distribution %>%
visualise() +
shade_p_value(obs_stat = observed_stat, direction = "right")
# direction is right as it is a greater than test
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat, direction = "right")
p_value
View(msleep)
library(gtools)
library(tidyverse)
library(janitor)
library(skimr)
library(infer)
library(boot)
?case_when
msleep %>%
mutate(domesticated case_when(
msleep <- msleep %>%
mutate(domesticated case_when(
msleep <- msleep
mutate(domesticated case_when(
msleep <- msleep
mutate(domesticated = case_when(
conservation == domesticated ~ "TRUE",
is.na(conservation) ~ "FALSE",
FALSE ~ as.character(conservation)
))
msleep <- msleep
mutate(domesticated = case_when(
"conservation" == "domesticated" ~ "TRUE",
is.na(conservation) ~ "FALSE",
FALSE ~ as.character(conservation)
))
msleep <- msleep
mutate(domesticated = case_when(
conservation == "domesticated" ~ "TRUE",
is.na(conservation) ~ "FALSE",
FALSE ~ as.character(conservation)
))
msleep <- msleep
mutate(domesticated =
case_when(
conservation == "domesticated" ~ "domesticated",
is.na(conservation) ~ "other",
TRUE ~ "other")
)
msleep <- msleep
mutate(domesticated =
case_when(
msleep$conservation == "domesticated" ~ "domesticated",
is.na(conservation) ~ "other",
TRUE ~ "other")
)
library(gtools)
library(tidyverse)
library(janitor)
library(skimr)
library(infer)
library(boot)
data(msleep)
genus_count <- msleep %>%
group_by(genus) %>%
summarise(n())
genus_count
vore_count <- msleep %>%
group_by(vore) %>%
summarise(n())
vore_count
order_count <- msleep %>%
group_by(order) %>%
summarise(n())
order_count
# Let's have a look at the data
msleep %>%
ggplot(aes(x = sleep_total)) +
geom_histogram(col = "white", fill = "seagreen")
msleep %>%
ggplot(aes(x = sleep_total)) +
geom_boxplot()
observed_stat <- msleep %>%
summarise (mean_rating = mean(sleep_total))
observed_stat
# Calculate the null sampling distribution
# point - we are testing one value
# mu is the mean
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesise(null = "point", mu = 7.00) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bins = 30)
# Visualise the results
# shade_pvalue gives different ways of shading in the distribution graph
# using both shades in significantly greater and lower than the test statistic
# the graph shows the p-value
# the shading shows us the corresponding extremes
# are we in the extreme 5%?
null_distribution %>%
visualise(bins = 30) +
shade_pvalue(obs_stat = observed_stat$mean_rating,
direction = "both")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat$mean_rating,
direction = "both")
p_value
# Create omnivore table
omnivores <- msleep %>%
filter(vore == "omni")
# Create herbivore table
herbivores <- msleep %>%
filter(vore == "herbi")
# Combine the two datasets
omni_herbi <- bind_rows(omnivores, herbivores, .id = "vore") %>%
mutate(vore = ifelse(vore == "1", "omni", "herbi"))
head(omni_herbi)
omni_herbi %>%
ggplot(aes(y = sleep_total, x = vore)) +
geom_boxplot()
null_distribution <- omni_herbi %>%
specify(sleep_total ~ vore) %>%
#it is the relationship between the total sleep and the type of animal we are testing.
hypothesise(null = "independence") %>%
#the null hypothesis is there is no relationship i.e. they are independent
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
#our sample stat is mean of algarve minus mean of nice, so this is the order we specify in the calculate step
head(null_distribution)
observed_stat <- omni_herbi %>%
specify(sleep_total ~ vore) %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
observed_stat
null_distribution %>%
visualise() +
shade_p_value(obs_stat = observed_stat, direction = "right")
# direction is right as it is a greater than test
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat, direction = "right")
p_value
msleep <- msleep
mutate(domesticated =
case_when(
msleep$conservation == "domesticated" ~ "domesticated",
is.na(conservation) ~ "other",
TRUE ~ "other")
)
msleep <- msleep
mutate(domesticated =
if_else(conservation = "domesticated", "domesticated", "other", "other")
)
View(null_distribution)
msleep <- msleep %>%
mutate(msleep, domesticated =
ifelse(conservation == "domesticated", "Domesticated", "Other"))
View(msleep)
View(omnivores)
msleep <- msleep %>%
mutate(msleep, domesticated =
case_when(
conservation == "domesticated" ~ "domesticated",
is.na(conservation) ~ "other",
TRUE ~ as.character(conservation)
))
View(msleep)
msleep <- msleep %>%
mutate(msleep, domesticated =
case_when(
conservation == "domesticated" ~ "domesticated",
is.na(conservation) ~ "other",
TRUE ~ "other"
))
View(msleep)
# We can see that 6.46% have no reviews - is that significant?
msleep %>%
group_by(domesticated) %>%
summarise(count = n(),
prop = n()/nrow(msleep))
null_distribution <- msleep %>%
specify(response = domesticated,
success = "domesticated") %>%
hypothesise(null = "point",
p = 0.07) %>%
generate(reps = 5000,
type = "draw") %>%
calculate(stat = "prop")
View(null_distribution)
null_distribution2 <- msleep %>%
specify(response = domesticated,
success = "domesticated") %>%
hypothesise(null = "point",
p = 0.07) %>%
generate(reps = 5000,
type = "draw") %>%
calculate(stat = "prop")
View(null_distribution)
null_distribution2 %>%
visualise(bins = 30)
null_distribution2 %>%
visualise(bins = 20)
observed_stat <- msleep %>%
specify(response = domesticated,
success = "domesticated") %>%
calculate(stat = "prop")
observed_stat
null_distribution2 %>%
visualise(bins = 30) +
shade_pvalue(obs_stat = observed_stat,
direction = "both")
